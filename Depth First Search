# Depth-First Search Implementation in Python

def dfs(graph, start_node, visited=None):
    if visited is None:
        visited = set()

    # Mark the current node as visited
    visited.add(start_node)
    print(start_node, end=" ")

    # Visit all unvisited neighbors
    for neighbor in graph[start_node]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)


# Graph represented as an adjacency list (dictionary)
graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

print("DFS Traversal starting from node A:")
dfs(graph, 'A')
print()
