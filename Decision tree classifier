from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, export_text
from sklearn.metrics import accuracy_score

# Load dataset (replace with your dataset later)
data = load_iris()
X, y = data.data, data.target

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)

# Train Decision Tree
model = DecisionTreeClassifier(criterion="gini", random_state=1)
model.fit(X_train, y_train)

# Display Tree Structure
tree_rules = export_text(model, feature_names=data.feature_names)
print("\nDecision Tree Rules:\n")
print(tree_rules)

# Prediction on test data
y_pred = model.predict(X_test)

# Model Accuracy
acc = accuracy_score(y_test, y_pred)
print("\nAccuracy:", round(acc * 100, 2), "%")

# Classifying a new instance
new_sample = [[5.0, 3.4, 1.5, 0.2]]
prediction = model.predict(new_sample)
print("\nPredicted Class:", data.target_names[prediction[0]])
